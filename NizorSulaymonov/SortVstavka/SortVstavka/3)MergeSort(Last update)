// SortVstavka.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
using namespace std;
#define N 10

//Начало сортировки слиянием
int merge(double Massive[], int left, int sredni, int right) {

	int j = left;
	int k = sredni + 1;          //Середина массива 
	int i = 0;                   //индекс  массива  Second
	int  perestanovka = 0;
	double Second[N] = { 0 };        //Массив для слияния 

	while (j <= sredni && k <= right) {
		perestanovka = perestanovka + 2;      //Подсчет перестановок
		if (Massive[j] < Massive[k]) {             
			perestanovka++;
			Second[i] = Massive[j];             
			j++;                       
		}
		else {
			perestanovka++;
			Second[i] = Massive[k];
			k++;
		}
		i++;                       
	}
	while (j <= sredni) {
		perestanovka++;
		Second[i] = Massive[j];               // Заполняем массив Second  элементами, которые остались
		j++;
		i++;
	}
	while (k <= right) {
		perestanovka++;
		Second[i] = Massive[k];
		k++;
		i++;
	}
	for (int i = left; i <= right; i++) {
		Massive[i] = Second[i - left];                //Элементы из массива Second уходят в Massive
	}
	return perestanovka; //Возращение значения
}
//Основная функция сортировки слияния
int MergeSort(double Massive[], int l, int r) {
	if (l < r) {
		int cat = 0;
		int q = l + (r - l) / 2;     //Величина среднего значения массива
		MergeSort(Massive, l, q);      //Сортировка массива
		MergeSort(Massive, q + 1, r);  //Массивы  с 1 элементом
		cat = merge(Massive, l, q, r);       // Все  массивы с 1 элементом сливаем в 1 массив
		return cat;
	}
}
//Ввод массив в ручную и вывод сортированного массива
int main() {
	int i = 0;
	double Massive[N]; int swapi = 0;
	for (i = 0; i < N; i++) {
		cout << "Fill with element: ";
		printf("Massive[%d] = ", i);
		scanf_s("%lf", &Massive[i]);//Ввод элементов массива
	}

	printf("Sort result:\n");
	swapi = MergeSort(Massive, 0, N - 1); //Начальные значения левой и правой части
	for (int i = 0; i < N; i++) {
		printf("Massive[%d] = %lf\n", i, Massive[i]);
	}
	printf("Kol-vo perestanovok = %d", swapi);//Кол-во перестановок
	return 0;
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
